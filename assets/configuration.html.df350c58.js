import{_ as n,o as a,c as s,e as t}from"./app.2571caf4.js";const e={},o=t(`<h1 id="configuration" tabindex="-1"><a class="header-anchor" href="#configuration" aria-hidden="true">#</a> Configuration</h1><p>Some animation effects can be modified by configuration</p><h2 id="global-configuration" tabindex="-1"><a class="header-anchor" href="#global-configuration" aria-hidden="true">#</a> Global Configuration</h2><p>By adding global configuration when registering the plugin</p><table><thead><tr><th>property</th><th>explanation</th><th>type</th><th>defult value</th></tr></thead><tbody><tr><td>delay</td><td>delay</td><td><code>?number</code></td><td>0</td></tr><tr><td>duration</td><td>animation duration</td><td><code>?number</code></td><td>1000</td></tr><tr><td>repeat</td><td>repeat times</td><td><code>?number|&quot;infinite&quot;</code></td><td>1</td></tr><tr><td>prefix</td><td>class name prefix,custom build <code>Animate.css</code> prefix</td><td><code>?string</code></td><td>animate__</td></tr><tr><td>stop</td><td>disable animation</td><td><code>?boolean</code></td><td>false</td></tr></tbody></table><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>
  <span class="token function">vueAnimateCss</span><span class="token punctuation">(</span>
    GlobalAnimateConfig<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      delay<span class="token operator">:</span> <span class="token number">5000</span><span class="token punctuation">,</span>
      duration<span class="token operator">:</span> <span class="token number">15000</span><span class="token punctuation">,</span>
      repeat<span class="token operator">:</span> <span class="token number">2</span>
      <span class="token comment">// repeat: &quot;infinite&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span>
app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&quot;#app&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="partial-configuration" tabindex="-1"><a class="header-anchor" href="#partial-configuration" aria-hidden="true">#</a> Partial Configuration</h2><p>You can also configure the configuration after each directives.</p><table><thead><tr><th>property</th><th>explanation</th><th>type</th><th>defult value</th></tr></thead><tbody><tr><td>delay</td><td>delay</td><td><code>?number</code></td><td>inherited from global</td></tr><tr><td>duration</td><td>animation duration</td><td><code>?number</code></td><td>inherited from global</td></tr><tr><td>repeat</td><td>repeat times</td><td><code>?number|&quot;infinite&quot;</code></td><td>inherited from global</td></tr><tr><td>autoPlay</td><td>Whether to play automatically <br> by default it will play immediately after the element is created</td><td><code>?boolean</code></td><td>true</td></tr></tbody></table><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-bounce</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>state.bounceConfig<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>bounce<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> reactive <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> AnimateConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;animation-vue&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token generic-function"><span class="token function">reactive</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token punctuation">{</span>
  bounceConfig<span class="token operator">:</span> AnimateConfig<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  bounceConfig<span class="token operator">:</span> <span class="token punctuation">{</span>
    duration<span class="token operator">:</span> <span class="token number">2000</span><span class="token punctuation">,</span>
    repeat<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
    delay<span class="token operator">:</span> <span class="token number">700</span><span class="token punctuation">,</span>
    <span class="token comment">// autoPlay Mostly used for functional control animation play</span>
    autoPlay<span class="token operator">:</span> <span class="token boolean">false</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="modifiers" tabindex="-1"><a class="header-anchor" href="#modifiers" aria-hidden="true">#</a> Modifiers</h2><p>Through the modifiers, you can avoid manually setting js/ts for corresponding event monitoring</p><table><thead><tr><th>property</th><th>explanation</th></tr></thead><tbody><tr><td><code>click</code></td><td>click event</td></tr><tr><td><code>hover</code></td><td>desktop mouseenter event</td></tr></tbody></table><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-bounce.click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>state.bounceConfig<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>bounce<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> reactive <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> AnimateConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;animation-vue&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token generic-function"><span class="token function">reactive</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token punctuation">{</span>
  bounceConfig<span class="token operator">:</span> AnimateConfig<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  bounceConfig<span class="token operator">:</span> <span class="token punctuation">{</span>
    duration<span class="token operator">:</span> <span class="token number">2000</span><span class="token punctuation">,</span>
    autoPlay<span class="token operator">:</span> <span class="token boolean">false</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">warning</p><p>When the modifiers is used, if autoPlay is false, the animation will not play by default until autoPlay is true. <br> The animation will not end when repeat is set to infinite, and will only play when autoPlay is true.</p></div>`,17),p=[o];function i(c,l){return a(),s("div",null,p)}var d=n(e,[["render",i],["__file","configuration.html.vue"]]);export{d as default};
